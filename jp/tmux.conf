#
# tmux plugin manager configuraion
#
set -g @tpm_plugins " \
    tmux-plugins/tpm \
    tmux-plugins/tmux-open \
"
run-shell ~/.tmux/plugins/tpm/tpm

# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind \ select-pane -l

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r H resize-pane -L 3
bind -r L resize-pane -R 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt
bind r source-file ~/.tmux.conf \; display-message "Reload Config!!"

# vi-style controls for copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode-vi Y send-keys -X select-line
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"

# window-status-current
setw -g window-status-current-fg green
setw -g window-status-current-bg default
setw -g window-status-current-attr bold

set-option -g display-time 4000
set-option -g prefix C-w
set-option -g allow-rename off

# when mouse mode on, disable to right click in gnome-terminal(context menu)
# set-option -g mouse on

set -g status-style "fg=white,bg=black"
set -g status-left-length 30
set -g status-left '#[fg=white,bg=default,bold]#h#[fg=white]:#[fg=white,bg=default,bold][#S#[fg=white]] #[default]'
set -g status-right '#[fg=white,bg=default,bold] %Y-%m-%d(%a) %H:%M#[default]'

# pane-active-border
# set -g pane-active-border-fg black
# set -g pane-active-border-bg blue
set -g pane-border-style "fg=white,bg=default"
set -g pane-active-border-style "fg=green,bg=default"

#bind-key > run-shell 'rm ~/.tmux-buffer' \; save-buffer ~/.tmux-buffer \; run-shell 'xsel -b -i < ~/.tmux-buffer' \; display-message "Copied to clipboard."
#bind-key < if-shell 'xsel -b -o > ~/.tmux-buffer' 'load-buffer ~/.tmux-buffer ; paste-buffer'
bind-key < run "xclip -o | tmux load-buffer - && tmux paste-buffer"

##### tmux-vim-select-pane configuration start #####
# Smart pane switching with awareness of vim splits
#bind k run-shell 'tmux-vim-select-pane -U'
#bind j run-shell 'tmux-vim-select-pane -D'
#bind h run-shell 'tmux-vim-select-pane -L'
#bind l run-shell 'tmux-vim-select-pane -R'

#bind -n C-k run-shell 'tmux-vim-select-pane -U'
#bind -n C-j run-shell 'tmux-vim-select-pane -D'
#bind -n C-h run-shell 'tmux-vim-select-pane -L'
#bind -n C-l run-shell 'tmux-vim-select-pane -R'
#bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# Bring back clear screen under tmux prefix
#bind C-l send-keys 'C-l'
##### tmux-vim-select-pane configuration finish #####
